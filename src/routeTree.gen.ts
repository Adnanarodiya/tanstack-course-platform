/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthorizedRouteImport } from './routes/unauthorized'
import { Route as UnauthenticatedRouteImport } from './routes/unauthenticated'
import { Route as TermsOfServiceRouteImport } from './routes/terms-of-service'
import { Route as SuccessRouteImport } from './routes/success'
import { Route as PurchaseRouteImport } from './routes/purchase'
import { Route as PrivacyPolicyRouteImport } from './routes/privacy-policy'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CreateTestimonialRouteImport } from './routes/create-testimonial'
import { Route as CancelRouteImport } from './routes/cancel'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LearnIndexRouteImport } from './routes/learn/index'
import { Route as LearnNotFoundRouteImport } from './routes/learn/not-found'
import { Route as LearnNoSegmentsRouteImport } from './routes/learn/no-segments'
import { Route as LearnCourseCompletedRouteImport } from './routes/learn/course-completed'
import { Route as LearnAddRouteImport } from './routes/learn/add'
import { Route as LearnSlugEditRouteImport } from './routes/learn/$slug/edit'
import { Route as LearnSlugLayoutRouteImport } from './routes/learn/$slug/_layout'
import { Route as LearnSlugLayoutIndexRouteImport } from './routes/learn/$slug/_layout.index'
import { ServerRoute as ApiLogoutServerRouteImport } from './routes/api/logout'
import { ServerRoute as ApiStripeWebhookServerRouteImport } from './routes/api/stripe/webhook'
import { ServerRoute as ApiLoginGoogleIndexServerRouteImport } from './routes/api/login/google/index'
import { ServerRoute as ApiSegmentsSegmentIdVideoServerRouteImport } from './routes/api/segments/$segmentId/video'
import { ServerRoute as ApiLoginGoogleCallbackIndexServerRouteImport } from './routes/api/login/google/callback/index'

const LearnSlugRouteImport = createFileRoute('/learn/$slug')()
const rootServerRouteImport = createServerRootRoute()

const UnauthorizedRoute = UnauthorizedRouteImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedRoute = UnauthenticatedRouteImport.update({
  id: '/unauthenticated',
  path: '/unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsOfServiceRoute = TermsOfServiceRouteImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRouteImport,
} as any)
const SuccessRoute = SuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => rootRouteImport,
} as any)
const PurchaseRoute = PurchaseRouteImport.update({
  id: '/purchase',
  path: '/purchase',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyPolicyRoute = PrivacyPolicyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateTestimonialRoute = CreateTestimonialRouteImport.update({
  id: '/create-testimonial',
  path: '/create-testimonial',
  getParentRoute: () => rootRouteImport,
} as any)
const CancelRoute = CancelRouteImport.update({
  id: '/cancel',
  path: '/cancel',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnSlugRoute = LearnSlugRouteImport.update({
  id: '/learn/$slug',
  path: '/learn/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnIndexRoute = LearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnNotFoundRoute = LearnNotFoundRouteImport.update({
  id: '/learn/not-found',
  path: '/learn/not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnNoSegmentsRoute = LearnNoSegmentsRouteImport.update({
  id: '/learn/no-segments',
  path: '/learn/no-segments',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnCourseCompletedRoute = LearnCourseCompletedRouteImport.update({
  id: '/learn/course-completed',
  path: '/learn/course-completed',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnAddRoute = LearnAddRouteImport.update({
  id: '/learn/add',
  path: '/learn/add',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnSlugEditRoute = LearnSlugEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => LearnSlugRoute,
} as any)
const LearnSlugLayoutRoute = LearnSlugLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => LearnSlugRoute,
} as any)
const LearnSlugLayoutIndexRoute = LearnSlugLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnSlugLayoutRoute,
} as any)
const ApiLogoutServerRoute = ApiLogoutServerRouteImport.update({
  id: '/api/logout',
  path: '/api/logout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStripeWebhookServerRoute = ApiStripeWebhookServerRouteImport.update({
  id: '/api/stripe/webhook',
  path: '/api/stripe/webhook',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiLoginGoogleIndexServerRoute =
  ApiLoginGoogleIndexServerRouteImport.update({
    id: '/api/login/google/',
    path: '/api/login/google/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSegmentsSegmentIdVideoServerRoute =
  ApiSegmentsSegmentIdVideoServerRouteImport.update({
    id: '/api/segments/$segmentId/video',
    path: '/api/segments/$segmentId/video',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiLoginGoogleCallbackIndexServerRoute =
  ApiLoginGoogleCallbackIndexServerRouteImport.update({
    id: '/api/login/google/callback/',
    path: '/api/login/google/callback/',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cancel': typeof CancelRoute
  '/create-testimonial': typeof CreateTestimonialRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/purchase': typeof PurchaseRoute
  '/success': typeof SuccessRoute
  '/terms-of-service': typeof TermsOfServiceRoute
  '/unauthenticated': typeof UnauthenticatedRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/learn/add': typeof LearnAddRoute
  '/learn/course-completed': typeof LearnCourseCompletedRoute
  '/learn/no-segments': typeof LearnNoSegmentsRoute
  '/learn/not-found': typeof LearnNotFoundRoute
  '/learn': typeof LearnIndexRoute
  '/learn/$slug': typeof LearnSlugLayoutRouteWithChildren
  '/learn/$slug/edit': typeof LearnSlugEditRoute
  '/learn/$slug/': typeof LearnSlugLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cancel': typeof CancelRoute
  '/create-testimonial': typeof CreateTestimonialRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/purchase': typeof PurchaseRoute
  '/success': typeof SuccessRoute
  '/terms-of-service': typeof TermsOfServiceRoute
  '/unauthenticated': typeof UnauthenticatedRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/learn/add': typeof LearnAddRoute
  '/learn/course-completed': typeof LearnCourseCompletedRoute
  '/learn/no-segments': typeof LearnNoSegmentsRoute
  '/learn/not-found': typeof LearnNotFoundRoute
  '/learn': typeof LearnIndexRoute
  '/learn/$slug': typeof LearnSlugLayoutIndexRoute
  '/learn/$slug/edit': typeof LearnSlugEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cancel': typeof CancelRoute
  '/create-testimonial': typeof CreateTestimonialRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/purchase': typeof PurchaseRoute
  '/success': typeof SuccessRoute
  '/terms-of-service': typeof TermsOfServiceRoute
  '/unauthenticated': typeof UnauthenticatedRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/learn/add': typeof LearnAddRoute
  '/learn/course-completed': typeof LearnCourseCompletedRoute
  '/learn/no-segments': typeof LearnNoSegmentsRoute
  '/learn/not-found': typeof LearnNotFoundRoute
  '/learn/': typeof LearnIndexRoute
  '/learn/$slug': typeof LearnSlugRouteWithChildren
  '/learn/$slug/_layout': typeof LearnSlugLayoutRouteWithChildren
  '/learn/$slug/edit': typeof LearnSlugEditRoute
  '/learn/$slug/_layout/': typeof LearnSlugLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cancel'
    | '/create-testimonial'
    | '/login'
    | '/privacy-policy'
    | '/purchase'
    | '/success'
    | '/terms-of-service'
    | '/unauthenticated'
    | '/unauthorized'
    | '/learn/add'
    | '/learn/course-completed'
    | '/learn/no-segments'
    | '/learn/not-found'
    | '/learn'
    | '/learn/$slug'
    | '/learn/$slug/edit'
    | '/learn/$slug/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cancel'
    | '/create-testimonial'
    | '/login'
    | '/privacy-policy'
    | '/purchase'
    | '/success'
    | '/terms-of-service'
    | '/unauthenticated'
    | '/unauthorized'
    | '/learn/add'
    | '/learn/course-completed'
    | '/learn/no-segments'
    | '/learn/not-found'
    | '/learn'
    | '/learn/$slug'
    | '/learn/$slug/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cancel'
    | '/create-testimonial'
    | '/login'
    | '/privacy-policy'
    | '/purchase'
    | '/success'
    | '/terms-of-service'
    | '/unauthenticated'
    | '/unauthorized'
    | '/learn/add'
    | '/learn/course-completed'
    | '/learn/no-segments'
    | '/learn/not-found'
    | '/learn/'
    | '/learn/$slug'
    | '/learn/$slug/_layout'
    | '/learn/$slug/edit'
    | '/learn/$slug/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CancelRoute: typeof CancelRoute
  CreateTestimonialRoute: typeof CreateTestimonialRoute
  LoginRoute: typeof LoginRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  PurchaseRoute: typeof PurchaseRoute
  SuccessRoute: typeof SuccessRoute
  TermsOfServiceRoute: typeof TermsOfServiceRoute
  UnauthenticatedRoute: typeof UnauthenticatedRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
  LearnAddRoute: typeof LearnAddRoute
  LearnCourseCompletedRoute: typeof LearnCourseCompletedRoute
  LearnNoSegmentsRoute: typeof LearnNoSegmentsRoute
  LearnNotFoundRoute: typeof LearnNotFoundRoute
  LearnIndexRoute: typeof LearnIndexRoute
  LearnSlugRoute: typeof LearnSlugRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/logout': typeof ApiLogoutServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/segments/$segmentId/video': typeof ApiSegmentsSegmentIdVideoServerRoute
  '/api/login/google': typeof ApiLoginGoogleIndexServerRoute
  '/api/login/google/callback': typeof ApiLoginGoogleCallbackIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/logout': typeof ApiLogoutServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/segments/$segmentId/video': typeof ApiSegmentsSegmentIdVideoServerRoute
  '/api/login/google': typeof ApiLoginGoogleIndexServerRoute
  '/api/login/google/callback': typeof ApiLoginGoogleCallbackIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/logout': typeof ApiLogoutServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/segments/$segmentId/video': typeof ApiSegmentsSegmentIdVideoServerRoute
  '/api/login/google/': typeof ApiLoginGoogleIndexServerRoute
  '/api/login/google/callback/': typeof ApiLoginGoogleCallbackIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/logout'
    | '/api/stripe/webhook'
    | '/api/segments/$segmentId/video'
    | '/api/login/google'
    | '/api/login/google/callback'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/logout'
    | '/api/stripe/webhook'
    | '/api/segments/$segmentId/video'
    | '/api/login/google'
    | '/api/login/google/callback'
  id:
    | '__root__'
    | '/api/logout'
    | '/api/stripe/webhook'
    | '/api/segments/$segmentId/video'
    | '/api/login/google/'
    | '/api/login/google/callback/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiLogoutServerRoute: typeof ApiLogoutServerRoute
  ApiStripeWebhookServerRoute: typeof ApiStripeWebhookServerRoute
  ApiSegmentsSegmentIdVideoServerRoute: typeof ApiSegmentsSegmentIdVideoServerRoute
  ApiLoginGoogleIndexServerRoute: typeof ApiLoginGoogleIndexServerRoute
  ApiLoginGoogleCallbackIndexServerRoute: typeof ApiLoginGoogleCallbackIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/unauthenticated': {
      id: '/unauthenticated'
      path: '/unauthenticated'
      fullPath: '/unauthenticated'
      preLoaderRoute: typeof UnauthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms-of-service': {
      id: '/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof TermsOfServiceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/success': {
      id: '/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof SuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/purchase': {
      id: '/purchase'
      path: '/purchase'
      fullPath: '/purchase'
      preLoaderRoute: typeof PurchaseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-testimonial': {
      id: '/create-testimonial'
      path: '/create-testimonial'
      fullPath: '/create-testimonial'
      preLoaderRoute: typeof CreateTestimonialRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cancel': {
      id: '/cancel'
      path: '/cancel'
      fullPath: '/cancel'
      preLoaderRoute: typeof CancelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/$slug': {
      id: '/learn/$slug'
      path: '/learn/$slug'
      fullPath: '/learn/$slug'
      preLoaderRoute: typeof LearnSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/': {
      id: '/learn/'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/not-found': {
      id: '/learn/not-found'
      path: '/learn/not-found'
      fullPath: '/learn/not-found'
      preLoaderRoute: typeof LearnNotFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/no-segments': {
      id: '/learn/no-segments'
      path: '/learn/no-segments'
      fullPath: '/learn/no-segments'
      preLoaderRoute: typeof LearnNoSegmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/course-completed': {
      id: '/learn/course-completed'
      path: '/learn/course-completed'
      fullPath: '/learn/course-completed'
      preLoaderRoute: typeof LearnCourseCompletedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/add': {
      id: '/learn/add'
      path: '/learn/add'
      fullPath: '/learn/add'
      preLoaderRoute: typeof LearnAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/$slug/edit': {
      id: '/learn/$slug/edit'
      path: '/edit'
      fullPath: '/learn/$slug/edit'
      preLoaderRoute: typeof LearnSlugEditRouteImport
      parentRoute: typeof LearnSlugRoute
    }
    '/learn/$slug/_layout': {
      id: '/learn/$slug/_layout'
      path: '/learn/$slug'
      fullPath: '/learn/$slug'
      preLoaderRoute: typeof LearnSlugLayoutRouteImport
      parentRoute: typeof LearnSlugRoute
    }
    '/learn/$slug/_layout/': {
      id: '/learn/$slug/_layout/'
      path: '/'
      fullPath: '/learn/$slug/'
      preLoaderRoute: typeof LearnSlugLayoutIndexRouteImport
      parentRoute: typeof LearnSlugLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/logout': {
      id: '/api/logout'
      path: '/api/logout'
      fullPath: '/api/logout'
      preLoaderRoute: typeof ApiLogoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/stripe/webhook': {
      id: '/api/stripe/webhook'
      path: '/api/stripe/webhook'
      fullPath: '/api/stripe/webhook'
      preLoaderRoute: typeof ApiStripeWebhookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/login/google/': {
      id: '/api/login/google/'
      path: '/api/login/google'
      fullPath: '/api/login/google'
      preLoaderRoute: typeof ApiLoginGoogleIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/segments/$segmentId/video': {
      id: '/api/segments/$segmentId/video'
      path: '/api/segments/$segmentId/video'
      fullPath: '/api/segments/$segmentId/video'
      preLoaderRoute: typeof ApiSegmentsSegmentIdVideoServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/login/google/callback/': {
      id: '/api/login/google/callback/'
      path: '/api/login/google/callback'
      fullPath: '/api/login/google/callback'
      preLoaderRoute: typeof ApiLoginGoogleCallbackIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface LearnSlugLayoutRouteChildren {
  LearnSlugLayoutIndexRoute: typeof LearnSlugLayoutIndexRoute
}

const LearnSlugLayoutRouteChildren: LearnSlugLayoutRouteChildren = {
  LearnSlugLayoutIndexRoute: LearnSlugLayoutIndexRoute,
}

const LearnSlugLayoutRouteWithChildren = LearnSlugLayoutRoute._addFileChildren(
  LearnSlugLayoutRouteChildren,
)

interface LearnSlugRouteChildren {
  LearnSlugLayoutRoute: typeof LearnSlugLayoutRouteWithChildren
  LearnSlugEditRoute: typeof LearnSlugEditRoute
}

const LearnSlugRouteChildren: LearnSlugRouteChildren = {
  LearnSlugLayoutRoute: LearnSlugLayoutRouteWithChildren,
  LearnSlugEditRoute: LearnSlugEditRoute,
}

const LearnSlugRouteWithChildren = LearnSlugRoute._addFileChildren(
  LearnSlugRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CancelRoute: CancelRoute,
  CreateTestimonialRoute: CreateTestimonialRoute,
  LoginRoute: LoginRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  PurchaseRoute: PurchaseRoute,
  SuccessRoute: SuccessRoute,
  TermsOfServiceRoute: TermsOfServiceRoute,
  UnauthenticatedRoute: UnauthenticatedRoute,
  UnauthorizedRoute: UnauthorizedRoute,
  LearnAddRoute: LearnAddRoute,
  LearnCourseCompletedRoute: LearnCourseCompletedRoute,
  LearnNoSegmentsRoute: LearnNoSegmentsRoute,
  LearnNotFoundRoute: LearnNotFoundRoute,
  LearnIndexRoute: LearnIndexRoute,
  LearnSlugRoute: LearnSlugRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiLogoutServerRoute: ApiLogoutServerRoute,
  ApiStripeWebhookServerRoute: ApiStripeWebhookServerRoute,
  ApiSegmentsSegmentIdVideoServerRoute: ApiSegmentsSegmentIdVideoServerRoute,
  ApiLoginGoogleIndexServerRoute: ApiLoginGoogleIndexServerRoute,
  ApiLoginGoogleCallbackIndexServerRoute:
    ApiLoginGoogleCallbackIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
